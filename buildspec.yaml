version: 0.2
env:
  secrets-manager:
    DOCKER_PASSWORD: "VR/docker-login:password"
    DOCKER_USER: "VR/docker-login:username"
    LOGIN: "VR/sc-login:SONAR_TOKEN"
    HOST: "VR/sc-login:HOST"
    Organization: "VR/sc-login:Organization"
    Project: "VR/sc-login:Project"
phases:
  install:
    commands:
      # For generated reports
      - mkdir reports
      - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      # Grype installation
      - curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
      # SonarCloud installation
      - apt-get install -y jq
      - wget http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
      - tar xzf apache-maven-3.5.4-bin.tar.gz
      - ln -s apache-maven-3.5.4 maven
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
      # OWASP Zap installation
      - docker pull owasp/zap2docker-stable
      - docker network create zapnet
      - docker run -d --network="zapnet" -u zap -p 8080:8080 -i owasp/zap2docker-stable zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true

  build:
    on-failure: ABORT
    commands:
      # build and run test image
      - imageid=$(docker build . | grep Successfully | awk '{print $3}')
      - containerid=$(docker run -t -p 80:8080 --rm -d --network="zapnet" $imageid)
      # terraform-compliance scan
      - python3 lib/terraform-compliance.py
      # Grype scan
      - grype $imageid > reports/grype-report.txt
      # SonarCloud scan
      - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project | jq . > reports/sonarqube-report.json
      - if [ $(jq -r '.projectStatus.status' reports/sonarqube-report.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
      # OWASP Zap scan
      - containerip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $containerid)
      - docker run -t owasp/zap2docker-stable zap-baseline.py -t https://$containerip > reports/owasp-report.txt
artifacts:
  name: reports
  files:
    - reports/*
