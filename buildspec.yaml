version: 0.2
env:
  secrets-manager:
    LOGIN: yusufscott/example-code:sonartoken
    HOST: yusufscott/example-code:HOST
    Organization: yusufscott/example-code:Organization
    Project: yusufscott/example-code:Project
phases:
  install:
    commands:
      # terraform-compliance installation
      - sudo apt-get update && sudo apt-get upgrade -y --no-install-recommends ca-certificates
      - sudo apt-get install -y gnupg software-properties-common curl --no-install-recommends ca-certificates
      - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      - sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      - sudo apt-get update && sudo apt-get install terraform -y --no-install-recommends ca-certificates
      - pip install terraform-compliance
      # Anchore installation
      - curl https://engine.anchore.io/docs/quickstart/docker-compose.yaml > docker-compose.yaml
      - docker-compose up -d
      - pip install anchorecli
      # SonarQube installation
      - apt-get install -y jq --no-install-recommends ca-certificates
      - wget http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
      - tar xzf apache-maven-3.5.4-bin.tar.gz
      - ln -s apache-maven-3.5.4 maven
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
      # OWASP Zap installation
      - docker login --username yusufscott01 --password-stdin $DOCKER_LOGIN
      - docker pull owasp/zap2docker-stable
      - docker run -u zap -p 8080:8080 -i owasp/zap2docker-stable zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true -config api.key=<api-key>
      - pip install --upgrade zapcli
      - docker network create zapnet

  build:
    on-failure: ABORT
    commands:
      # terraform-compliance scan
      - terraform plan -out=plan.out
      - terraform-compliance -p plan.out > terraform-report.txt
      # Anchore scan
      - docker build -t example-code
      - docker run example-code --net zapnet
      - anchore-cli image add example-code
      - anchore-cli image wait example-code
      - anchore-cli image vuln example-code os
      - anchore-cli get example-code > anchore-report.txt
      # SonarQube scan
      - mvn test     
      - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project > sonarqube-report.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
      # OWASP Zap scan
      - id=$(docker inspect --format="{{.Id}}" example-code)
      - ip=$(docker inspect <CONTAINER ID> | grep IPAddress)
      - docker run -t owasp/zap2docker-stable zap-full-scan.py -t https://$ip > owasp-report.txt
